<schema package="com.atono.server.qpid.bdbstore">


<!--

   bdbmsgstore: BDB-based Message Store Plugin for Apache Qpid C++ Broker
   Copyright (C) 2011 Dario Mazza (dariomzz@gmail.com)

   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>. 

-->


<!--
 Copyright (c) 2007, 2008 Red Hat, Inc.

 This file is part of the Qpid async store library msgstore.so.

 This library is free software; you can redistribute it and/or
 modify it under the terms of the GNU Lesser General Public
 License as published by the Free Software Foundation; either
 version 2.1 of the License, or (at your option) any later version.

 This library is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 Lesser General Public License for more details.

 You should have received a copy of the GNU Lesser General Public
 License along with this library; if not, write to the Free Software
 Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301
 USA

 The GNU Lesser General Public License is available in the file COPYING.
 -->


  <class name="StorageProvider">
    <property name="brokerRef"	type="objId"  	access="RO" 	references="qpid.Broker" index="y" parentRef="y"/>
    <property name="location"	type="sstr"	access="RO" 	desc="Logical directory on disk"/>
    <property name="bdbBaseDir"	type="sstr"	access="RO"	desc="Directory used for Berkeley Db Environment"/>
    <property name="type"	type="sstr"	access="RO"	desc="Provider Name"	index="y"/>
    <property name="num_jfiles"	type="uint32"	access="RO"	desc="Default number of files used for Journal"/> 
    <property name="num_thread_enqueue"	type="uint32"	access="RO"	desc="Number of threads used for enqueue thread pool"/>
    <property name="num_thread_dequeue"	type="uint32"	access="RO"	desc="Number of threads used for dequeue thread pool"/>
    <property name="compact" 	type="bool"	access="RO"	desc="Compact flag option"/>
    <property name="smart_async" type="bool"	access="RO"	desc="Smart Async flag option"/>
    <property name="acceptRecovery" type="bool"	access="RO" 	desc="Accept Recovery option"/>
    <property name="mongoHost"	type="sstr"	access="RO"	desc="Mongo Database Host for Accept Recovery"/>
    <property name="mongoPort"	type="sstr"	access="RO"	desc="Mongo Database Port for Accept Recovery"/>
    <property name="mongoDbName" type="sstr"	access="RO"	desc="Mongo Database Name for Accept Recovery"/>
    <property name="mongoCollection" type="sstr" access="RO"	desc="Mongo Collection Name for Accept Recovery"/>
    <property name="enqLogCleanerTimeInterval" 	type="uint32"	access="RO"	unit="second"	desc="Enqueue log cleaner time interval"/>
    <property name="deqLogCleanerTimeInterval"	type="uint32"	access="RO"	unit="second"	desc="Dequeue Log cleaner time interval"/> 
    <property name="enqLogCleanerWarningSize"	type="uint32"	access="RO"	unit="byte"	desc="Enqueue Log cleaner warning size"/>
    <property name="deqLogCleanerWarningSize"	type="uint32"	access="RO"	unit="byte"	desc="Dequeue Log cleaner warning size"/>

    <statistic name="pendingAsyncEnqueue"	type="count32"	desc="Async Enqueue operations currently in the thread pool"/>
    <statistic name="pendingAsyncDequeue"	type="count32"	desc="Async Dequeue operations currently in the thread pool"/>
    <statistic name="executedEnqueue"		type="count32"	desc="Number of Enqueue executed by the store"/>
    <statistic name="executedDequeue"		type="count32"	desc="Number of Dequeue executed by the store"/>
    <statistic name="skippedEnqueue"		type="count32"	desc="Number of Enqueue skipped due to smart async"/>
    <statistic name="skippedDequeue"		type="count32"	desc="Number of Dequeue	skipped due to smart async"/>
    <statistic name="totalEnqueueTime"		type="count64"	desc="Total time spent in enqueue operations"/>
    <statistic name="totalDequeueTime"		type="count64"	desc="Total time spent in dequeue operations"/>
    <statistic name="enqueueTime"		type="mmaTime"	desc=""/>
    <statistic name="dequeueTime"		type="mmaTime"	desc=""/>
    
  </class>

  <class name="Journal">
    <property name="queueRef"           type="objId"  access="RO" references="qpid.Queue" isGeneralReference="y"/>
    <property name="name"               type="sstr"   access="RO" index="y"/>
    <property name="directory"          type="sstr"   access="RO"              desc="Directory containing journal files"/>
    <property name="bdbDir"       type="sstr"   access="RO"              desc="Berkeley DB directory"/>
    <property name="num_jfiles"		type="uint32"	access="RO"	desc="Number of files used for this journal"/>
 </class> 
  <eventArguments>
    <arg name="jrnlId"     type="sstr"   desc="Journal Id"/>
    <arg name="what"       type="sstr"   desc="Description of event"/>
  </eventArguments>
  <event name="enqThresholdExceeded" sev="warn"   args="jrnlId, what"/>
  <event name="created"              sev="notice" args="jrnlId"/>
  <event name="full"                 sev="error"  args="jrnlId, what"/>
  <event name="recovered"            sev="notice" args="jrnlId"/>
</schema>
